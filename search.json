[{"path":"https://michaelchirico.github.io/potools/articles/custom-diagnostic.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Writing a custom diagnostic","text":"potools provides several “diagnostic” functions used check “health” messaging corpus available given package. check_cracked_messages, looks messages split chunks hard translate; check_untranslated_cat, looks messages displayed via cat() marked translation; check_untranslated_src, looks messages src directory marked translation. just crack surface types diagnostics possible improving quality messaging users – process translation, also bettering experience English! vignette ’ll demonstrate just use case writing custom diagnostic function checks typos messages applying function utils::aspell().","code":""},{"path":"https://michaelchirico.github.io/potools/articles/custom-diagnostic.html","id":"writing-the-diagnostic","dir":"Articles","previous_headings":"","what":"Writing the diagnostic","title":"Writing a custom diagnostic","text":"’ll call function check_spelling; take input data.table like produced get_message_data(), give output data.table indexing issues found. Specifically, three four columns: call, file, line_number, replacement. first three come directly input; last one optional suggests user way repair “unhealthy” messages. package, probably use helper functions clean & simplify body diagnostic; ’re piling everything sequence illustration everything one place.","code":"check_spelling = function(message_data) {   # if aspell isn't installed, this won't work; be sure to return an object with the right schema anyway   if (!nzchar(Sys.which(\"aspell\"))) {     warning(\"'aspell' is not installed; returning nothing\")     return(message_data[0, .(call, file, line_number)])   }    # aspell() works on files, so we'll write the msgid to files   aspell_dir <- file.path(tempdir(), 'aspell')   dir.create(aspell_dir)   original_dir <- setwd(aspell_dir)   on.exit({unlink(aspell_dir, recursive = TRUE); setwd(original_dir)})      # (!is_repeat) makes sure we only check duplicate messages once   # plural messages are in a list, so handle them separately   message_data[(!is_repeat), by = .(file, type), {     if (.BY$type == \"singular\") {       cat(msgid, file = .BY$file, sep = \"\\n\")       # aspell() results has 5 columns: Original, File, Line, Column, Suggestions; we only need 1 & 5       results = utils::aspell(.BY$file)       unlink(.BY$file)              typo_idx <- sapply(results$Original, grep, msgid)       # take the first suggestion       replacement = sapply(         seq_along(results$Suggestions),         function(typo_i) {           # take the identified typo & replace it with aspell's 1st suggestion in the original `call`           gsub(             results$Original[typo_i], results$Suggestions[[typo_i]][1L],             call[typo_idx[typo_i]], fixed = TRUE           )         }       )              .(         call = call[typo_idx],         file = file[typo_idx],         line_number = line_number[typo_idx],         replacement = replacement       )     } else {       # unlist() to write both the n=1 and n!=1 messages to the file side-by-side       all_msgid <- unlist(msgid_plural)       cat(all_msgid, file = .BY$file, sep = \"\\n\")       results = utils::aspell(.BY$file)       unlink(.BY$file)              # odd numbers in grep output --> first entry for each plural_msgid; even numbers --> second entry.       # do this arithmetic trick to re-map that to the original entry number in msgid_plural       typo_idx <- ((sapply(results$Original, grep, all_msgid) - 1L) %/% 2L) + 1L       # potentially overwrite each call >1 time if both messages have a typo       replacement = call       for (typo_i in seq_along(results$Suggestions)) {         replacement[typo_idx[typo_i]] <- gsub(           results$Original[typo_i], results$Suggestions[[typo_i]][1L],           replacement[typo_idx[typo_i]], fixed = TRUE         )       }       typo_idx <- unique(typo_idx)        .(         call = call[typo_idx],         file = file[typo_idx],         line_number = line_number[typo_idx],         replacement = replacement[typo_idx]       )     }   }] }"},{"path":"https://michaelchirico.github.io/potools/articles/custom-diagnostic.html","id":"running-the-diagnostic","dir":"Articles","previous_headings":"","what":"Running the diagnostic","title":"Writing a custom diagnostic","text":"can check diagnostic works simple test package GreatSpelling created vignette. covers basics – look forward seeing great uses creative developers can devise. Thanks reading!","code":"library(potools) great_spelling_messages = get_message_data(\"GreatSpelling\") ## Getting R-level messages... # showing the structure of the messagedata for this package great_spelling_messages ##    message_source     type       file                           msgid ## 1:              R singular    hazel.R These dark arts are forbiddden! ## 2:              R singular spellman.R     This is byond my abilities! ## 3:              R   plural   merlin.R                            <NA> ##                  msgid_plural                                         call ## 1:                                 stop(\"These dark arts are forbiddden!\") ## 2:                                  warning(\"This is byond my abilities!\") ## 3: %d lyfe left,%d lyves left ngettext(n, \"%d lyfe left\", \"%d lyves left\") ##    line_number is_repeat is_marked_for_translation is_templated ## 1:           2     FALSE                      TRUE        FALSE ## 2:           2     FALSE                      TRUE        FALSE ## 3:           2     FALSE                      TRUE        FALSE # running our diagnostic check_spelling(great_spelling_messages) ## Warning in check_spelling(great_spelling_messages): 'aspell' is not installed; ## returning nothing ## Empty data.table (0 rows and 3 cols): call,file,line_number"},{"path":"https://michaelchirico.github.io/potools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors","text":"Michael Chirico. Maintainer, author.          Hadley Wickham [aut]","code":""},{"path":[]},{"path":"https://michaelchirico.github.io/potools/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Tools for Internationalization and Portability in R Packages","text":"R users global community. Xiamen Santiago, Addis Ababa Tbilisi, Ogallala Adelaide, R users legion native languages well. target audience package extends beyond English-speaking world, want make user experience non-native English speakers using tools, can consider internationalizing package translating user-facing communications (verbose messages, warnings, errors, etc.). Unfortunately, tedious aspects, namely, learning gettext system .po files, .pot templates, .mo binaries – another syntax rife quirks idiosyncrasies. potools designed minimize friction translating package abstracting away many details .po system translations possible. core function potools, translate_package, one-stop-shop interactively setting package translation providing translations, without ever touch .po file . potools UTF-8 package – .po .pot files produces treated UTF-8. potool logo features potoo designed Allison Horst.","code":""},{"path":"https://michaelchirico.github.io/potools/index.html","id":"translating-your-package-interactively-with-translate_package","dir":"","previous_headings":"Overview","what":"Translating your package interactively with translate_package()","title":"Tools for Internationalization and Portability in R Packages","text":"primary feature potools translate_package() function, designed first & stop typical experience internationalizing package","code":""},{"path":"https://michaelchirico.github.io/potools/index.html","id":"as-a-developer--generating-a-pot-template","dir":"","previous_headings":"Overview > Translating your package interactively with translate_package()","what":"As a developer – generating a .pot template","title":"Tools for Internationalization and Portability in R Packages","text":".pot template can used translators produce translations; just running translate_package() package’s source produce file (files, package R C/C++ messages translated), e.g.","code":"# run from the directory into which potools is cloned, i.e., 'potools' here is a file path translate_package('potools')"},{"path":"https://michaelchirico.github.io/potools/index.html","id":"as-a-translator--generating-a-po-translation--mo-translation-binary","dir":"","previous_headings":"Overview > Translating your package interactively with translate_package()","what":"As a translator – generating a .po translation & .mo translation binary","title":"Tools for Internationalization and Portability in R Packages","text":"add translations desired language, include target language translate_package() call. Running following launch interactive dialog prompting translations message--message:","code":"# es.po & es.mo Spanish translation files will be produced translate_package('potools', 'es')"},{"path":"https://michaelchirico.github.io/potools/index.html","id":"customized-translators","dir":"","previous_headings":"Overview","what":"Customized translators","title":"Tools for Internationalization and Portability in R Packages","text":"base R provides several functions messaging natively equipped translation (domain argument): stop(), warning(), message(), gettext(), gettextf(), ngettext(), packageStartupMessage(). handy, developers may prefer write functions, write wrappers provided functions provide enhanced functionality (e.g., templating automatic wrapping). case, default R tooling translation (xgettext(), xngettext() xgettext2pot(), update_pkg_po() tools) work, potools::translate_package() workhorse potools::get_message_data() provide interface continue building translations workflow. Suppose wrote function stopf() wrapper stop(gettextf()) used build templated error messages R, makes translation easier translators (see ), e.g.: Note potools uses just wrapper internally build error messages! extract strings calls package stopf() mark translation, use argument custom_translation_functions: invocation tells get_message_data() look strings fmt argument calls stopf(). 1 indicates fmt first argument. specifications possible, including marking custom calls C/C++; see ?translate_package full explanation. Note good marking strings translation – actually translated code execution, custom function ultimately pass strings gettext() gettextf() (done stopf() example). Without , string always just appear English.","code":"stopf = function(fmt, ..., domain = NULL) {   stop(gettextf(fmt, ...), domain = domain, call. = FALSE) } get_message_data(   '/path/to/my_package',   custom_translation_functions = list(R = 'stopf:fmt|1') )"},{"path":"https://michaelchirico.github.io/potools/index.html","id":"diagnostics","dir":"","previous_headings":"Overview","what":"Diagnostics","title":"Tools for Internationalization and Portability in R Packages","text":"translate_package also runs diagnostics can help make package translation-ready (see ).","code":""},{"path":"https://michaelchirico.github.io/potools/index.html","id":"cracked-messages","dir":"","previous_headings":"Overview > Diagnostics","what":"Cracked messages","title":"Tools for Internationalization and Portability in R Packages","text":"cracked message one like: current state, translators asked translate three messages independently: “” “good things ” “bad things.” message cracked; might possible translate string generic “” many languages – context key! keep context, error message instead build gettextf like : Now one string translate! Note also allows translator change word order see fit – example, Japanese, grammatical order usually puts verb last (English usually comes right subject). translate_package detects cracked messages suggests gettextf-based approach fix .","code":"stop(\"There are \", n, \" good things and \", m, \" bad things.\") stop(domain=NA, gettextf(\"There are %d good things and %d bad things.\"))"},{"path":"https://michaelchirico.github.io/potools/index.html","id":"untranslated-r-messages-produced-by-cat","dir":"","previous_headings":"Overview > Diagnostics","what":"Untranslated R messages produced by cat()","title":"Tools for Internationalization and Portability in R Packages","text":"strings passed certain base functions eligible translation, namely stop, warning, message, packageStartupMessage, gettext, gettextf, ngettext (domain argument key translation). However, common also produce user-facing messages using cat – package , must first use gettext gettextf translate message sending user cat. translate_package detects strings produced cat suggests gettext- gettextf-based fix.","code":""},{"path":"https://michaelchirico.github.io/potools/index.html","id":"untranslated-cc-messages","dir":"","previous_headings":"Overview > Diagnostics","what":"Untranslated C/C++ messages","title":"Tools for Internationalization and Portability in R Packages","text":"diagnostic detects literal char arrays provided common messaging functions C/C++, namely ngettext(), Rprintf(), REprintf(), Rvprintf(), REvprintf(), R_ShowMessage(), R_Suicide(), warning(), Rf_warning(), error(), Rf_error(), dgettext(), snprintf(). actually translate strings, pass translation macro _. NB: Translation C/C++ requires additional #includes declarations, including defining _ macro. See Internationalization section Writing R Extensions details.","code":""},{"path":"https://michaelchirico.github.io/potools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Internationalization and Portability in R Packages","text":"potools CRAN v0.2.0. can also install latest development version GitHub. easiest way :","code":"# install.packages(\"remotes\") remotes::install_github(\"MichaelChirico/potools\")"},{"path":[]},{"path":"https://michaelchirico.github.io/potools/index.html","id":"searchable-error-messages","dir":"","previous_headings":"Tips & Tricks for Translation","what":"Searchable error messages","title":"Tools for Internationalization and Portability in R Packages","text":"One observation offering translated messages non-English messages harder google. suggestions:","code":"+ You can give error messages a unique identifier (e.g. numbering). This may be harder to do for \"established\" packages since adding identifiers might be a breaking change.  + End users can switch to an English locale mid-session by running `Sys.setenv(LANGUAGE = 'en')` -- error messages will be produced in English until they set `LANGUAGE` again.  + You could write a custom error wrapper that produces the error both in English and as a translation."},{"path":"https://michaelchirico.github.io/potools/index.html","id":"translating-technical-terms","dir":"","previous_headings":"Tips & Tricks for Translation","what":"Translating technical terms","title":"Tools for Internationalization and Portability in R Packages","text":"Technical terms par course R packages; showing users similar terms concept might lead needless confusion. R recommends using ISI Multilingual Glossary Statistical Terms help overcome issue.","code":""},{"path":"https://michaelchirico.github.io/potools/index.html","id":"picking-a-domain-for-diasporic-languages","dir":"","previous_headings":"Tips & Tricks for Translation","what":"Picking a domain for diasporic languages","title":"Tools for Internationalization and Portability in R Packages","text":"domain use translating Spanish? ’s es_AR, es_BO, es_CL, es_DO, es_HN, … really need provide separate file Nicaraguan (es_NI) users? , . Typically, best creating one set translations language’s general domain (, es). translations exist es, users specific locales see messages es whenever exist. really want provide regionally-specific error messages (awesome!), can either (1) create whole new set translations region (2) write translations region-specific messages. latter R handles messages differ British/American spelling, example. Say user running es_GT triggers error. R first look translation es_GT; none defined, look translation es. none defined , finally fall back package’s default language (.e., whatever language written source code, usually English).","code":""},{"path":"https://michaelchirico.github.io/potools/index.html","id":"alternative-software","dir":"","previous_headings":"","what":"Alternative software","title":"Tools for Internationalization and Portability in R Packages","text":"potools means first tool facilitating internationalization; open-source projects deeper experience domain result relatively mature options working gettext/po ecosystem general. smattering tools ’ve come across: Poedit - https://poedit.net/ - GUI Software writing translations Gtranslator - https://wiki.gnome.org/Apps/Gtranslator - GNOME Translation editor Lokalize - https://userbase.kde.org/Lokalize - KDE’s Computer-Aided Translation system Virtaal - https://virtaal.translatehouse.org/?id=virtaal/index - Another FOSS software translation Pootle - https://pootle.translatehouse.org/ - Apparently related Virtaal, apparently ’s even paper written comparing two Localization Toolkit - https://toolkit.translatehouse.org/ - ’m sure difference vs. Virtaal & Pootle PO mode Emacs - https://www.emacswiki.org/emacs/PoMode","code":""},{"path":"https://michaelchirico.github.io/potools/reference/check_cracked_messages.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for cracked messages more suitable for templating — check_cracked_messages","title":"Check for cracked messages more suitable for templating — check_cracked_messages","text":"Diagnose R messages package discover presence \"cracked\" messages better served translation templating. See Details.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/check_cracked_messages.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Check for cracked messages more suitable for templating — check_cracked_messages","text":"","code":"check_cracked_messages(message_data)"},{"path":"https://michaelchirico.github.io/potools/reference/check_cracked_messages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for cracked messages more suitable for templating — check_cracked_messages","text":"message_data data.table, object convertible one.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/check_cracked_messages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for cracked messages more suitable for templating — check_cracked_messages","text":"data.table columns call, file, line_number, replacement summarizing results.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/check_cracked_messages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for cracked messages more suitable for templating — check_cracked_messages","text":"Error messages built like stop(\"gave \", n, \" arguments, \", m, \" needed.\") general hard translators -- correct translation may totally different order (e.g., often case Japanese). preferable instead use base::gettextf() build templated message like stop(gettextf(\"gave %d arguments %d needed.\", n, m)). Translators free rearrange template put numeric pattern fits naturally target language.","code":""},{"path":[]},{"path":"https://michaelchirico.github.io/potools/reference/check_cracked_messages.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check for cracked messages more suitable for templating — check_cracked_messages","text":"Michael Chirico","code":""},{"path":"https://michaelchirico.github.io/potools/reference/check_potools_sys_reqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the proper system utilities for running package translation are\ninstalled — check_potools_sys_reqs","title":"Check if the proper system utilities for running package translation are\ninstalled — check_potools_sys_reqs","text":"potools uses gettext command line tools R run translation. required translation work properly; function mainly testing use & checks whether current environment equipped translation.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/check_potools_sys_reqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the proper system utilities for running package translation are\ninstalled — check_potools_sys_reqs","text":"","code":"check_potools_sys_reqs()"},{"path":"https://michaelchirico.github.io/potools/reference/check_potools_sys_reqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the proper system utilities for running package translation are\ninstalled — check_potools_sys_reqs","text":"TRUE system ready translation, otherwise message suggesting proceed.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/check_potools_sys_reqs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if the proper system utilities for running package translation are\ninstalled — check_potools_sys_reqs","text":"Specifically, potools relies command-line utilities: msgmerge msgfmt msginit msgconv","code":""},{"path":[]},{"path":"https://michaelchirico.github.io/potools/reference/check_potools_sys_reqs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if the proper system utilities for running package translation are\ninstalled — check_potools_sys_reqs","text":"Michael Chirico","code":""},{"path":"https://michaelchirico.github.io/potools/reference/check_untranslated_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for untranslated messages emitted by cat — check_untranslated_cat","title":"Check for untranslated messages emitted by cat — check_untranslated_cat","text":"Diagnose R messages package discover presence messages emitted cat() translated (.e., passed gettext(), gettextf(), ngettext()).","code":""},{"path":"https://michaelchirico.github.io/potools/reference/check_untranslated_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Check for untranslated messages emitted by cat — check_untranslated_cat","text":"","code":"check_untranslated_cat(message_data)"},{"path":"https://michaelchirico.github.io/potools/reference/check_untranslated_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for untranslated messages emitted by cat — check_untranslated_cat","text":"message_data data.table, object convertible one.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/check_untranslated_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for untranslated messages emitted by cat — check_untranslated_cat","text":"data.table columns call, file, line_number, replacement summarizing results.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/check_untranslated_cat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for untranslated messages emitted by cat — check_untranslated_cat","text":"function cat commonly used emit messages users (e.g., verbose mode), equipped translation. Instead, messages must first translated emitted. character literals found package's R code used cat translated flagged function. flagged calls, potential replacement offered, built using gettext gettextf (depending whether one ... arguments supplied cat). gettextf case, suggested template always %s (string) since works inputs; author tighten appropriate sprintf() template marker appropriate, example author knows input integer, use %d %instead %s. NB: cat calls included -- particular, cat call specifying non-default file flagged, supplied sep character literal (e.g., sep=x instead sep=\"\")","code":""},{"path":[]},{"path":"https://michaelchirico.github.io/potools/reference/check_untranslated_cat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check for untranslated messages emitted by cat — check_untranslated_cat","text":"Michael Chirico","code":""},{"path":"https://michaelchirico.github.io/potools/reference/check_untranslated_src.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for cracked messages in C/C++ sources — check_untranslated_src","title":"Check for cracked messages in C/C++ sources — check_untranslated_src","text":"Diagnose C/C++ messages package discover untranslated messages","code":""},{"path":"https://michaelchirico.github.io/potools/reference/check_untranslated_src.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Check for cracked messages in C/C++ sources — check_untranslated_src","text":"","code":"check_untranslated_src(message_data)"},{"path":"https://michaelchirico.github.io/potools/reference/check_untranslated_src.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for cracked messages in C/C++ sources — check_untranslated_src","text":"message_data data.table, object convertible one.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/check_untranslated_src.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for cracked messages in C/C++ sources — check_untranslated_src","text":"data.table columns call, file, line_number, replacement summarizing results. replacement NA time, .e., replacement provided.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/check_untranslated_src.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for cracked messages in C/C++ sources — check_untranslated_src","text":"diagnostic looks literal char arrays passed messaging functions (identified translate_package()) marked translation (tagging translation _ N_ macros). strings translated marked.","code":""},{"path":[]},{"path":"https://michaelchirico.github.io/potools/reference/check_untranslated_src.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check for cracked messages in C/C++ sources — check_untranslated_src","text":"Michael Chirico","code":""},{"path":"https://michaelchirico.github.io/potools/reference/get_message_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract user-visible messages from a package — get_message_data","title":"Extract user-visible messages from a package — get_message_data","text":"function looks R src directories package user-visible messages compiles data.table::data.table() facilitate analyzing corpus .","code":""},{"path":"https://michaelchirico.github.io/potools/reference/get_message_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Extract user-visible messages from a package — get_message_data","text":"","code":"get_message_data(   dir = \".\",   custom_translation_functions = list(R = NULL, src = NULL),   style = NULL,   verbose = !is_testing() )"},{"path":"https://michaelchirico.github.io/potools/reference/get_message_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract user-visible messages from a package — get_message_data","text":"dir Character, default present directory; directory R package stored. custom_translation_functions list either/two components, R src, together governing extract non-standard strings package. See Details translate_package(). style Translation style, either \"base\" \"explict\". default, NULL, reads DESCRIPTION field Config/potools/style can specify style package. styles extract strings explicitly flagged translation gettext() ngettext(). base style additionally extracts strings calls stop(), warning(), message(), stopf(), warningf(), messagef() added helpers package. explicit style also accepts tr_() short hand gettext(). See vignette(\"developer\") details. verbose Logical, default TRUE (except testing). extra information progress, etc. reported?","code":""},{"path":"https://michaelchirico.github.io/potools/reference/get_message_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract user-visible messages from a package — get_message_data","text":"data.table following schema: message_source: character, either \"R\" \"src\", saying whether string found R src folder package type: character, either \"singular\" \"plural\"; \"plural\" means string came ngettext() can pluralized file: character, file string found msgid: character, string (character literal char array found source); missing type == \"plural\" strings msgid_plural: list(character, character), strings (character literals char arrays found source); first applies English n=1 (see ngettext), second applies n!=1; missing type == \"singular\" strings call: character, full call containing string found line_number: integer, line file string found is_repeat: logical, whether msgid duplicate within message_source is_marked_for_translation:logical, whether string marked translation (e.g., R, character literals supplied ... argument stop() marked) is_templated, logical, whether string templatable (e.g., uses %s formatting markers)","code":""},{"path":[]},{"path":"https://michaelchirico.github.io/potools/reference/get_message_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract user-visible messages from a package — get_message_data","text":"Michael Chirico","code":""},{"path":"https://michaelchirico.github.io/potools/reference/po_compile.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile .po files to .mo — po_compile","title":"Compile .po files to .mo — po_compile","text":"function compiles plain text .po files translators work binary .mo files installed packages used live translations.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/po_compile.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Compile .po files to .mo — po_compile","text":"","code":"po_compile(dir = \".\", package = NULL, lazy = TRUE, verbose = TRUE)"},{"path":"https://michaelchirico.github.io/potools/reference/po_compile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile .po files to .mo — po_compile","text":"dir Path package root directory. package Name package. supplied, read DESCRIPTION. lazy TRUE, .mo functions older .po files updated verbose TRUE, print information goes.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/po_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new .po file — po_create","title":"Create a new .po file — po_create","text":"po_create() creates new po/{languages}.po containing messages translated. Generally, expect use po_create() create new .po files call existing translation, update changes .pot. See po_update() details.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/po_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new .po file — po_create","text":"","code":"po_create(languages, dir = \".\", verbose = !is_testing())"},{"path":"https://michaelchirico.github.io/potools/reference/po_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new .po file — po_create","text":"languages Language identifiers. typically two letters (e.g. \"en\" = English, \"fr\" = French, \"es\" = Spanish, \"zh\" = Chinese), can include additional suffix languages regional variations (e.g. \"fr_CN\" = French Canadian, \"zh_CN\" = simplified characters used mainland China, \"zh_TW\" = traditional characters used Taiwan.) dir Character, default present directory; directory R package stored. verbose Logical, default TRUE (except testing). extra information progress, etc. reported?","code":""},{"path":"https://michaelchirico.github.io/potools/reference/po_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract messages for translation into a .pot file — po_extract","title":"Extract messages for translation into a .pot file — po_extract","text":"po_extract() scans package strings translated saves .pot template file (package's po directory). never modify file hand; instead modify underlying source code re-run po_extract(). existing translations, call po_update() po_extract() update changes.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/po_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Extract messages for translation into a .pot file — po_extract","text":"","code":"po_extract(   dir = \".\",   custom_translation_functions = list(),   verbose = !is_testing(),   style = NULL )"},{"path":"https://michaelchirico.github.io/potools/reference/po_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract messages for translation into a .pot file — po_extract","text":"dir Character, default present directory; directory R package stored. custom_translation_functions list either/two components, R src, together governing extract non-standard strings package. See Details translate_package(). verbose Logical, default TRUE (except testing). extra information progress, etc. reported? style Translation style, either \"base\" \"explict\". default, NULL, reads DESCRIPTION field Config/potools/style can specify style package. styles extract strings explicitly flagged translation gettext() ngettext(). base style additionally extracts strings calls stop(), warning(), message(), stopf(), warningf(), messagef() added helpers package. explicit style also accepts tr_() short hand gettext(). See vignette(\"developer\") details.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/po_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract messages for translation into a .pot file — po_extract","text":"extracted messages computed get_message_data(), invisibly.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/po_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update all .po files with changes in .pot — po_update","title":"Update all .po files with changes in .pot — po_update","text":"po_update() updates existing .po file .pot file changed. four cases: New messages: added blank msgstr. Deleted messages: marked deprecated moved bottom file. Major changes existing messages: appear addition deletion. Minor changes existing messages: flagged fuzzy. previous message given comments starting #|. Translators need update actual (uncommented) msgstr manually, using old msgid potential reference, delete old translation fuzzy comment (c-format remain, present).","code":"#, fuzzy, c-format #| msgid \"Generating en@quot translations\" msgid \"Updating '%s' %s translation\" msgstr \"memperbarui terjemahan bahasa en@quot...\""},{"path":"https://michaelchirico.github.io/potools/reference/po_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Update all .po files with changes in .pot — po_update","text":"","code":"po_update(dir = \".\", lazy = TRUE, verbose = !is_testing())"},{"path":"https://michaelchirico.github.io/potools/reference/po_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update all .po files with changes in .pot — po_update","text":"dir Character, default present directory; directory R package stored. lazy TRUE, .po files older corresponding .pot file updated. verbose Logical, default TRUE (except testing). extra information progress, etc. reported?","code":""},{"path":"https://michaelchirico.github.io/potools/reference/potools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"potools: Tools for Internationalization and Portability in R Packages — potools-package","title":"potools: Tools for Internationalization and Portability in R Packages — potools-package","text":"Translating messages R packages managed using po     top-level directory 'gettext' program. package provides     helper functions building support R packages, e.g.     common validation & /O tasks.","code":""},{"path":[]},{"path":"https://michaelchirico.github.io/potools/reference/potools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"potools: Tools for Internationalization and Portability in R Packages — potools-package","text":"Maintainer: Michael Chirico MichaelChirico4@gmail.com (Hadley Wickham [aut])","code":""},{"path":"https://michaelchirico.github.io/potools/reference/translate_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactively provide translations for a package's messages — translate_package","title":"Interactively provide translations for a package's messages — translate_package","text":"function handles \"grunt work\" building updating translation libraries. addition providing friendly interface supplying translations, internal logic built help make package translation-friendly.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/translate_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Interactively provide translations for a package's messages — translate_package","text":"","code":"translate_package(   dir = \".\",   languages,   diagnostics = list(check_cracked_messages, check_untranslated_cat,     check_untranslated_src),   custom_translation_functions = list(R = NULL, src = NULL),   max_translations = Inf,   use_base_rules = package %chin% .potools$base_package_names,   copyright = NULL,   bugs = \"\",   verbose = !is_testing() )"},{"path":"https://michaelchirico.github.io/potools/reference/translate_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactively provide translations for a package's messages — translate_package","text":"dir Character, default present directory; directory R package stored. languages Character vector; locale codes translate. See Details. diagnostics list diagnostic functions run package's message data. See Details. custom_translation_functions list either/two components, R src, together governing extract non-standard strings package. See Details. max_translations Numeric; used setting cap number translations done language. Defaults Inf, meaning messages package. use_base_rules Logical; internal behavior match base behavior strictly possible? TRUE run base package (.e., base one default packages like utils, graphics, etc.). See Details. copyright Character; passed write_po_file(). bugs Character; passed write_po_file(). verbose Logical, default TRUE (except testing). extra information progress, etc. reported?","code":""},{"path":"https://michaelchirico.github.io/potools/reference/translate_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactively provide translations for a package's messages — translate_package","text":"function returns nothing invisibly. side effect, .pot file written package's po directory (updated one yet exist, created scratch otherwise), .pofile written directory element languages.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/translate_package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interactively provide translations for a package's messages — translate_package","text":", builds low-level command line tools gettext. See Details. translate_package goes roughly three \"phases\" translation. Phase one setup -- dir checked existing translations (toggling \"update\" \"new\" modes), R files parsed combed user-facing messages. Phase two diagnostics; see Diagnostics section . diagnostic detecting \"unhealthy\" messages result yes/prompt exit translation address issues continuing. Phase three translation. messages found phase one iterated -- user shown message English prompted translation target language. process repeated domain languages. attempt made provide hints translations require special care (e.g. escape sequences use templates). templated messages (e.g., use %s), user-provided message must match templates English message. templates order -- R understands template reordering, e.g. %2$s says \"interpret second input string\". See sprintf() details. language completed, corresponding .po file written package's po directory (created yet exist). discrepancies default behavior translate_package translation workflow used generate .po/.pot files R (mainly, suite functions tools, tools::update_pkg_po(), tools::xgettext2pot(), tools::xgettext(), tools::xngettext()). superficial (e.g., whitespace comments), nevertheless may represent barrier smoothly submitting patchings R Core. make process translating base R default packages (tools, utils, stats, etc.) smooth possible, set use_base_rules argument TRUE resulting .po/.pot/.mo file match base's. Custom translation functions: package developers may want write messaging interface, use wrappers around base interface (.e., stop, warning, message, others) detected default (e.g. tools::update_pkg_po()). cases, use custom_translation_functions argument, whose interface inspired --keyword argument xgettext command-line tool. argument consists list two components, R src (either can excluded), owing differences R C/C++. components, present, consist character vector. R, two types input: one named arguments, unnamed arguments. Entries named arguments look like \"fname:arg|num\" (singular string) \"fname:arg1|num1,arg2|num2\" (plural string). fname gives name function/call extracted R source, arg/arg1/arg2 specify name argument fname strings extracted, num/num1/num2 specify order named argument within signature fname. Entries unnamed arguments look like \"fname:...\\xarg1,...,xargn\", .e., fname, followed :, followed ... (three dots), followed backslash (\\), followed comma-separated list argument names. strings within calls fname except supplied arguments named among xarg1, ..., xargn extracted. clarify, consider (redundantly) specify custom_translation_functions default messagers, gettext, gettextf, ngettext: custom_translation_functions = list(R = c(\"gettext:...\\domain\", \"gettextf:fmt|1\", \"ngettext:msg1|2,msg2|3\")). src, one type input, looks like \"fname:num\", says look num argument calls fname char arrays. Note difference translation works src vs. R -- R, strings passed certain functions considered marked translations, src, translatable strings must explicitly marked . src translations, custom_translation_functions used customize strings marked translation, rather, expand set calls searched potentially untranslated arrays (.e., arrays passed specified calls explicitly marked translation). can reported check_untranslated_src() diagnostic, example. Diagnostics: diagnostic function takes input data.table summarizing translatable strings package (e.g. generated get_message_data()), evaluates whether messages \"healthy\" sense, produces digest \"unhealthy\" strings (optionally) suggested replacements. diagnostic function must attribute named diagnostic_tag describes diagnostic ; reproduced format Found {nrow(result)} {diagnostic_tag}:. example, check_untranslated_cat() diagnostic_tag = \"untranslated messaging calls passed cat()\". output diagnostic result following schema: call: character, call identified problematic file: character, file call found line_number: integer, line file call found replacement: character, optional, suggested fix make call \"healthy\" See check_cracked_messages(), check_untranslated_cat(), check_untranslated_src() examples diagnostics. Domains: input languages conform valid languages accepted gettext. almost always takes form (1) ISO 639 2-letter language code; (2) ll_CC, ll ISO 639 2-letter language code CC ISO 3166 2-letter country code e.g. es Spanish, es_AR Argentinian Spanish, ro Romanian, etc. See base::Sys.getlocale() helpful tips tell locales currently available machine, see References web resources listing locales. Note also advice given R Installation Administration manual (also cited ) -- writing Spanish translations, typical package use language = \"es\" generate Spanish translations Spanish domains. want add regional flair messaging, can supplemental .po files. example, can add Argentinian messages es_AR; users running R es_AR locale see messages specifically written es_AR first; absent , es message shown; absent , default message (.e., language written source code, usually English). Chinese slightly different case -- typically, zh_CN domain used write simplified characters zh_TW used traditional characters. principal leverage zh_TW Taiwanisms zh_HK Hongkieisms. Currently, translation limited set domains available base R: Danish, German, English, British English, Spanish, Farsi, French, Italian, Japanese, Korean, Dutch, Polish, Brazilian Portugese, Russian, Turkish, Mainland Chinese, Taiwanese Chinese. list can expanded; please file Issue request GitHub.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/translate_package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Interactively provide translations for a package's messages — translate_package","text":"https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Internationalization https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Internationalization https://cran.r-project.org/doc/manuals/r-release/R-ints.html#Internationalization---R-sources https://developer.r-project.org/Translations30.html https://www.isi-web.org/publications/glossary--statistical-terms https://www.gnu.org/software/gettext/ https://www.gnu.org/software/gettext/manual/html_node/Usual-Language-Codes.html#Usual-Language-Codes https://www.gnu.org/software/gettext/manual/html_node/Country-Codes.html#Country-Codes https://www.stats.ox.ac.uk/pub/Rtools/goodies/gettext-tools.zip https://saimana.com/list--country-locale-code/","code":""},{"path":[]},{"path":"https://michaelchirico.github.io/potools/reference/translate_package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interactively provide translations for a package's messages — translate_package","text":"Michael Chirico","code":""},{"path":"https://michaelchirico.github.io/potools/reference/write_po_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a .po or .pot file corresponding to a message database — write_po_file","title":"Write a .po or .pot file corresponding to a message database — write_po_file","text":"Serialize message database .po .pot formats recognized gettext ecosystem.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/write_po_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Write a .po or .pot file corresponding to a message database — write_po_file","text":"","code":"write_po_file(   message_data,   po_file,   metadata,   width = 79L,   wrap_at_newline = TRUE,   use_base_rules = metadata$package %chin% .potools$base_package_names )  po_metadata(   package = \"\",   version = \"\",   language = \"\",   author = \"\",   email = \"\",   bugs = \"\",   copyright = NULL,   ... )  # S3 method for po_metadata format(x, template = FALSE, use_plurals = FALSE, ...)  # S3 method for po_metadata print(x, ...)"},{"path":"https://michaelchirico.github.io/potools/reference/write_po_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a .po or .pot file corresponding to a message database — write_po_file","text":"message_data data.table, returned get_message_data(). NB: R creates separate domains R C/C++ code; recommended filtering get_message_data output message_source == \"R\" message_source == \"src\". approaches untested. po_file Character vector giving destination path. Paths ending .pot written template files (e.g., msgstr entries blanked). metadata po_metadata object returned po_metadata(). width Numeric governing wrapping width output file. Default 79L match behavior xgettext utility. Inf turns wrapping (except file source markers comments). wrap_at_newline Logical, default TRUE match xgettext utility's behavior. TRUE, msgid msgstr always wrapped internal newline (.e., literally matching \\n). use_base_rules Logical; internal behavior match base behavior strictly possible? TRUE run base package (.e., base one default packages like utils, graphics, etc.). See Details. package Character; name package translated. version Character; version package translated. language Character; language msgstr. See translate_package() details. author Character; author (combined email) attribute translations (Last-Translator). email Character; e-mail address associated author. bugs Character; URL issues translations can reported. copyright object used construct initial Copyright reference output. NULL, comment written. list, following structure: year: Required, year hyphen-separated range years holder: Required, name copyright holder title: Optional, title .po additional: Optional, character vector additional lines copyright comment section character scalar, interpreted holder year set POT-Creation-Date's year. ... Additional (named) components add metadata. print.po_metadata, passed format.po_metadata x po_metadata object. template Logical; format metadata .pot template? use_plurals Logical; Plural-Forms entry included?","code":""},{"path":"https://michaelchirico.github.io/potools/reference/write_po_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a .po or .pot file corresponding to a message database — write_po_file","text":"po_metadata, object class po_metadata format method used serialize metadata.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/write_po_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a .po or .pot file corresponding to a message database — write_po_file","text":"Three components set automatically provided: pot_timestamp - POSIXct used write POT-Creation-Date entry. Defaults Sys.time() run time. po_timestamp - POSIXct used write PO-Revision-Date entry. Defaults pot_timestamp. language_team - string used write Language-Team entry. Defaults language; provided manually, format LANGUAGE <LL@li.org> recommended. charset output always set \"UTF-8\"; intentional make cumbersome create non-UTF-8 files.","code":""},{"path":"https://michaelchirico.github.io/potools/reference/write_po_file.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Write a .po or .pot file corresponding to a message database — write_po_file","text":"https://www.gnu.org/software/gettext/manual/html_node/Header-Entry.html","code":""},{"path":[]},{"path":"https://michaelchirico.github.io/potools/reference/write_po_file.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write a .po or .pot file corresponding to a message database — write_po_file","text":"Michael Chirico","code":""},{"path":"https://michaelchirico.github.io/potools/news/index.html","id":"potools-023-in-development","dir":"Changelog","previous_headings":"","what":"potools 0.2.3 (in development)","title":"potools 0.2.3 (in development)","text":"[Bugfix] translate_package() works batch mode, #224. Thanks @HenrikBengtsson report. potools new hex logo! Thanks @hadley coordinating @allisonhorst drawing! [Bugfix] check_cracked_messages() recognizes named arguments (e.g. call. stop() appendLF message()) keeps original call, #227. Thanks @hadley report. [Note] test suite now relies 3rd edition testthat, meaning version requirement Suggested dependency. [Note] default value verbose changed TRUE translate_package() get_message_data().","code":""},{"path":"https://michaelchirico.github.io/potools/news/index.html","id":"new-languageslocales-supported-out-of-the-box-0-2-3","dir":"Changelog","previous_headings":"","what":"New languages/locales supported out of the box:","title":"potools 0.2.3 (in development)","text":"Swedish (svenska)","code":""},{"path":"https://michaelchirico.github.io/potools/news/index.html","id":"potools-022-july-2021","dir":"Changelog","previous_headings":"","what":"potools 0.2.2 (July 2021)","title":"potools 0.2.2 (July 2021)","text":"CRAN release: 2021-07-12 potools gains logo featuring potoo thanks artistic skills @allisonhorst Skip tests machines gettext unavailable, #187; also alter msgfmt command executed create .mo files skip options unavailable Solaris, #218 Faster parsing src messages (e.g. get_message_data() base package reduced 14 7 seconds), #119 [New feature] New argument max_translations translate_package() limit number translations done, #188 adding metadata new language, added tolerance whitespace differences specifying plurals, #183 [New feature] get_message_data() skips messages lines comments # notranslate, regions lines matched pairs comments # notranslate start # notranslate end, #10. useful small fragmentary strings untranslateable/worth translating, strings technically untranslateable (e.g., contain \\r). [New function] write_po_file() convert message database .po .pot file manually (previously handled internally translate_package()), #203. Also constructor associated po_metadata class, po_metadata(). See ?po_metadata. [Bugfix] get_message_data() better job files unmatched parentheses inside preprocessor macros (#defines) C/C++ files, #199","code":""},{"path":"https://michaelchirico.github.io/potools/news/index.html","id":"potools-020-june-2021","dir":"Changelog","previous_headings":"","what":"potools 0.2.0 (June 2021)","title":"potools 0.2.0 (June 2021)","text":"CRAN release: 2021-06-30 Landed CRAN!","code":""}]
